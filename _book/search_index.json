[["forest-plots.html", "6 Forest plots 6.1 When model not developed in R 6.2 When model object available", " 6 Forest plots 6.1 When model not developed in R 6.1.1 Colour version The following graphs were created using GGplot when the base model was not created in R (i.e., all you have is an excel file or CSV file of estimates and confidence intervals because your mate Billy asked you to make him a graph but your mate Billy still insists on using Microsoft Excel despite you repeatedly telling him how good R is). # Loading the necessary packages library(tidyverse) library(ggrepel) library(magrittr) library(janitor) This just creates a test dataset - just copy and paste the code below to create the dataset necessary for our example graph. test_data &lt;- tribble( ~term, ~estimate, ~conf.low, ~conf.high, ~level, &quot;Weight&quot;, 1, 1, 1, &quot;Heavy&quot;, &quot;Weight&quot;, 1.37, 1.06, 1.79, &quot;Light&quot;, &quot;Height&quot;, 1, 1, 1, &quot;Middlin&#39;&quot;, &quot;Height&quot;, 6.91, 2.3, 20.79, &quot;Short&quot;, &quot;Height&quot;, 15.26, 1.8, 129.5, &quot;Tall&quot;, &quot;Age&quot;, 1, 1, 1, &quot;Old&quot;, &quot;Age&quot;, 3.02, 1.78, 5.12, &quot;Middlin&#39;&quot;, &quot;Age&quot;, 5.97, 2.19, 16.27, &quot;Young&quot;, &quot;Girth&quot;, 1, 1, 1, &quot;Wide&quot;, &quot;Girth&quot;, 1.63, 1.27, 2.08, &quot;Narrow&quot;, &quot;Sex&quot;, 0.98, 0.96, 1, &quot;Male&quot; ) This code sets global options to apply to all parts of the example graph. theme_set( theme_minimal # Setting the default theme to base settings on ( base_family = &quot;Times&quot;, # Setting default font base_size = 8 ) # Setting font size ) Running the code to get the actual graph. The code is quite long as I have merged the estimates and confidence interval variables into a single variable use to label the graph at the end, havenâ€™t been able to find a way to do this in a more elegant and concise way. test_data %&gt;% mutate(level = fct_reorder(level, desc(estimate))) %&gt;% # To get the levels in order of strength of point estimate unite(&quot;confidence_intervals&quot;, conf.low, conf.high, remove = FALSE, sep = &quot;, &quot; ) %&gt;% # This step (and the next unite and mutate) creates a new variable containing point estimate and CIs, necessary for one of the steps below mutate( confidence_intervals = paste0(&quot;(&quot;, confidence_intervals, &quot;)&quot;) ) %&gt;% unite(&quot;estimate_confidence_intervals&quot;, estimate, confidence_intervals, remove = F, sep = &quot; &quot; ) %&gt;% mutate(estimate_confidence_intervals = case_when( conf.low == 1 ~ &quot;&quot;, TRUE ~ estimate_confidence_intervals )) %&gt;% # This step gets rid of the estimates and CIs from the reference levels (converting to NA doesn&#39;t work) ggplot(aes(x = level, y = estimate, ymin = conf.low, ymax = conf.high)) + geom_pointrange(aes(col = level), size = 0.2, shape = 1) + geom_hline(yintercept = 1, linetype = &quot;dotted&quot;, color = &quot;grey40&quot;) + xlab(&quot;&quot;) + ylab(&quot;OR (95% Confidence Interval)&quot;) + geom_errorbar(aes(ymin = conf.low, ymax = conf.high, col = level), width = 0.2, cex = 0.2) + facet_wrap(term ~ ., strip.position = &quot;left&quot;, nrow = 10, scales = &quot;free_y&quot;) + scale_y_continuous(trans = &quot;log10&quot;) + theme( plot.title = element_text(size = 10, face = &quot;bold&quot;), axis.text.y = element_text(hjust = 0.2, lineheight = 0.2), axis.text.x = element_text(hjust = 0.2), panel.background = element_blank(), panel.spacing.y = unit(0.5, &quot;null&quot;), strip.text.y = element_text(hjust = 0.5, vjust = 0, angle = 90, face = &quot;bold&quot;), legend.position = &quot;none&quot; ) + coord_flip() + labs(title = &quot;Odds ratios (logarithmic scale)&quot;) + geom_text_repel(aes(label = estimate_confidence_intervals), # what you want to label with, this is the variable we created above family = &quot;serif&quot;, # font size = 2.5, # Size of text of label nudge_x = 0.35, # Nudge label up and down nudge_y = .15, # Nudge label left and right min.segment.length = Inf, # This removes the annoying lines that join labels to their point xlim = c(-Inf, Inf), # These two limit lines prevent labels being repelled by boundaries of graph ylim = c(-Inf, Inf) ) 6.1.2 B&amp;W version Only very minor changes to the code above test_data %&gt;% mutate(level = fct_reorder(level, desc(estimate))) %&gt;% # To get the levels in order of strength of point estimate unite(&quot;confidence_intervals&quot;, conf.low, conf.high, remove = FALSE, sep = &quot;, &quot; ) %&gt;% # This step (and the next unite and mutate) creates a new variable containing point estimate and CIs, necessary for one of the steps below mutate( confidence_intervals = paste0(&quot;(&quot;, confidence_intervals, &quot;)&quot;) ) %&gt;% unite(&quot;estimate_confidence_intervals&quot;, estimate, confidence_intervals, remove = F, sep = &quot; &quot; ) %&gt;% mutate(estimate_confidence_intervals = case_when( conf.low == 1 ~ &quot;&quot;, TRUE ~ estimate_confidence_intervals )) %&gt;% # This step gets rid of the estimates and CIs from the reference levels (converting to NA doesn&#39;t work) ggplot(aes(x = level, y = estimate, ymin = conf.low, ymax = conf.high)) + geom_pointrange(size = 0.2, shape = 1) + geom_hline(yintercept = 1, linetype = &quot;dotted&quot;, color = &quot;grey40&quot;) + xlab(&quot;&quot;) + ylab(&quot;OR (95% Confidence Interval)&quot;) + geom_errorbar(aes(ymin = conf.low, ymax = conf.high), width = 0.2, cex = 0.2) + facet_wrap(term ~ ., strip.position = &quot;left&quot;, nrow = 10, scales = &quot;free_y&quot;) + scale_y_continuous(trans = &quot;log10&quot;) + theme( plot.title = element_text(size = 10, face = &quot;bold&quot;), axis.text.y = element_text(hjust = 0.2, lineheight = 0.2), axis.text.x = element_text(hjust = 0.2), panel.background = element_blank(), panel.spacing.y = unit(0.5, &quot;null&quot;), strip.text.y = element_text(hjust = 0.5, vjust = 0, angle = 90, face = &quot;bold&quot;), legend.position = &quot;none&quot; ) + coord_flip() + labs(title = &quot;Odds ratios (logarithmic scale)&quot;) + geom_text_repel(aes(label = estimate_confidence_intervals), # what you want to label with, this is the variable we created above family = &quot;serif&quot;, # font size = 2.5, # Size of text of label nudge_x = 0.35, # Nudge label up and down nudge_y = .15, # Nudge label left and right min.segment.length = Inf, # This removes the annoying lines that join labels to their point xlim = c(-Inf, Inf), # These two limit lines prevent labels being repelled by boundaries of graph ylim = c(-Inf, Inf) ) 6.2 When model object available This is a test to see if this is working, I am not sure it is "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
